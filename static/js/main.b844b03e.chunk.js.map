{"version":3,"sources":["AddRemoveItemButton.js","reducers/actions.js","reducers/actionTypes.js","Total.js","ProductDetails.js","ProductCard.js","ProductList.js","Cart.js","Routes.js","Navbar.js","App.js","serviceWorker.js","reducers/cartReducer.js","reducers/rootReducer.js","reducers/dataReducer.js","index.js"],"names":["AddRemoveItemButton","id","useState","count","setCount","cart","useSelector","state","dispatch","useDispatch","useEffect","newCount","items","forEach","item","className","onClick","type","removeFromCart","addToCart","Total","products","total","setTotal","newTotal","reduce","acc","price","to","toFixed","totalItems","ProductDetails","useParams","data","upperfirst","name","src","image_url","alt","description","ProductCard","key","ProductList","shallowEqual","Object","keys","map","p","Cart","uniqueItems","Set","Array","from","Routes","exact","path","Navbar","App","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","length","idxToRemove","indexOf","updatedItems","slice","concat","updatedTotalItems","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b844b03e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from './reducers/actions';\nimport './AddRemoveItemButton.css';\n\nconst AddRemoveItemButton = ({ id }) => {\n\tconst [ count, setCount ] = useState(0);\n\tconst cart = useSelector((state) => state.cart);\n\tconst dispatch = useDispatch();\n\tconst handleAdd = () => {\n\t\tdispatch(addToCart(id));\n\t};\n\tconst handleRemove = () => {\n\t\tif (count > 0) {\n\t\t\tdispatch(removeFromCart(id));\n\t\t}\n\t};\n\tuseEffect(\n\t\t() => {\n\t\t\tlet newCount = 0;\n\t\t\tcart.items.forEach((item) => {\n\t\t\t\tif (item === id) newCount++;\n\t\t\t});\n\t\t\tsetCount(newCount);\n\t\t},\n\t\t[ cart, id ]\n\t);\n\n\treturn (\n\t\t<div className=\"AddRemoveItemButton\">\n\t\t\t<button className=\"Remove\" onClick={handleRemove}>\n\t\t\t\t-\n\t\t\t</button>\n\t\t\t<span> {count} </span>\n\t\t\t<button className=\"Add\" onClick={handleAdd}>\n\t\t\t\t+\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default AddRemoveItemButton;\n","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from './actionTypes';\n\nexport function addToCart(id) {\n\treturn {\n\t\ttype : ADD_TO_CART,\n\t\tid\n\t};\n}\n\nexport function removeFromCart(id) {\n\treturn {\n\t\ttype : REMOVE_FROM_CART,\n\t\tid\n\t};\n}\n\nexport function clearCart() {\n\treturn {\n\t\ttype : CLEAR_CART\n\t};\n}\n","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Total.css';\n\nconst Total = ({ products }) => {\n\tconst [ total, setTotal ] = useState(0);\n\tconst cart = useSelector((state) => state.cart);\n\tuseEffect(\n\t\t() => {\n\t\t\tlet newTotal = cart.items.reduce((acc, id) => {\n\t\t\t\treturn acc + products[id].price;\n\t\t\t}, 0);\n\t\t\tsetTotal(newTotal);\n\t\t},\n\t\t[ cart, products ]\n\t);\n\treturn (\n\t\t<Link to=\"/cart\">\n\t\t\t<p className=\"Total\">\n\t\t\t\t<b>Cart Total: ${total.toFixed(2)} </b>\n\t\t\t\t<span>\n\t\t\t\t\t<i className=\"fas fa-shopping-cart\" />\n\t\t\t\t\t<span className=\"Total-Badge\">{cart.totalItems}</span>\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</Link>\n\t);\n};\n\nexport default Total;\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport AddRemoveItemButton from './AddRemoveItemButton';\nimport upperfirst from 'lodash.upperfirst';\nimport Total from './Total';\nimport './ProductDetails.css';\n\nconst ProductDetails = () => {\n\tconst { id } = useParams();\n\tconst products = useSelector((state) => state.data.products);\n\tconst item = products[id];\n\treturn (\n\t\t<div className=\"ProductDetails\">\n\t\t\t<h1>{upperfirst(item.name)}</h1>\n\t\t\t<Total products={products} />\n\t\t\t<div className=\"ProductDetails-Container\">\n\t\t\t\t<div className=\"ProductDetails-Left\">\n\t\t\t\t\t<img src={item.image_url} alt={item.name} />\n\t\t\t\t\t<AddRemoveItemButton id={id} />\n\t\t\t\t\t<small>Add to cart</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ProductDetails-Right\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Price: </b>${item.price}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h4>Product Details</h4>\n\t\t\t\t\t<p>{item.description}</p>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<button>Go Back</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProductCard.css';\nimport upperfirst from 'lodash.upperfirst';\nimport AddRemoveItemButton from './AddRemoveItemButton';\n\nconst ProductCard = ({ id, data }) => {\n\treturn (\n\t\t<div className=\"ProductCard\" key={id} id={id}>\n\t\t\t<Link to={`/products/${id}`}>\n\t\t\t\t<div className=\"ProductCard-ImageContainer\">\n\t\t\t\t\t<img src={data.image_url} alt={data.name} />\n\t\t\t\t</div>\n\t\t\t\t<h4>{upperfirst(data.name)}</h4>\n\t\t\t\t<p>Price: ${data.price}</p>\n\t\t\t\t<p>{data.description}</p>\n\t\t\t</Link>\n\t\t\t<AddRemoveItemButton id={id} />\n\t\t</div>\n\t);\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport ProductCard from './ProductCard';\nimport Total from './Total';\nimport './ProductList.css';\n\nconst ProductList = () => {\n\tconst data = useSelector((state) => state.data, shallowEqual);\n\n\treturn (\n\t\t<div className=\"ProductList\">\n\t\t\t<h1>Shoply</h1>\n\t\t\t<Total products={data.products} />\n\t\t\t<section className=\"ProductList-Products\">\n\t\t\t\t{Object.keys(data.products).map((p) => <ProductCard id={p} key={p} data={data.products[p]} />)}\n\t\t\t</section>\n\t\t</div>\n\t);\n};\n\nexport default ProductList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ProductCard from './ProductCard';\nimport Total from './Total';\nimport './Cart.css';\n\nconst Cart = () => {\n\tconst products = useSelector((state) => state.data.products);\n\tconst cart = useSelector((state) => state.cart);\n\tconst uniqueItems = new Set(cart.items);\n\n\treturn (\n\t\t<div className=\"Cart\">\n\t\t\t<h1>Cart</h1>\n\t\t\t<Total products={products} />\n\t\t\t<div className=\"Cart-Container\">\n\t\t\t\t{Array.from(uniqueItems).map((item) => <ProductCard id={item} key={item} data={products[item]} />)}\n\t\t\t</div>\n\t\t\t<Link to=\"/\" className=\"GO-BACK\">\n\t\t\t\t<button>Go Back</button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ProductDetails from './ProductDetails';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\n\nconst Routes = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/products/:id\">\n\t\t\t\t<ProductDetails />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/cart\">\n\t\t\t\t<Cart />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<ProductList />\n\t\t\t</Route>\n\t\t\t<Redirect to=\"/\" />\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Total from './Total';\nimport './Navbar.css';\n\nconst Navbar = () => {\n\tconst products = useSelector((state) => state.products);\n\n\treturn (\n\t\t<nav className=\"Navbar\">\n\t\t\t<NavLink to=\"/\">\n\t\t\t\t<img src=\"./favicon.ico\" alt=\"Shoply\" />\n\t\t\t</NavLink>\n\t\t\t{/* <NavLink to=\"/cart\">cart</NavLink> */}\n\t\t\t<Total products={products} />\n\t\t</nav>\n\t);\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport Navbar from './Navbar';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar />\n\t\t\t<Routes />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from './actionTypes';\n\nconst INITIAL_STATE = { items: [], totalItems: 0 };\n\nexport default function cartReducer(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase ADD_TO_CART:\n\t\t\tlet items = [ ...state.items, action.id ];\n\t\t\tlet totalItems = items.length;\n\t\t\treturn { ...state, items, totalItems };\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet idxToRemove = state.items.indexOf(action.id);\n\t\t\tlet updatedItems = state.items.slice(0, idxToRemove).concat(state.items.slice(idxToRemove + 1));\n\t\t\tlet updatedTotalItems = updatedItems.length;\n\t\t\treturn { ...state, items: updatedItems, totalItems: updatedTotalItems };\n\t\tcase CLEAR_CART:\n\t\t\treturn { ...state, items: [], totalItems: 0 };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\nimport cartReducer from './cartReducer';\nimport dataReducer from './dataReducer';\n\nconst rootReducer = combineReducers({ data: dataReducer, cart: cartReducer });\n\nexport default rootReducer;\n","import data from '../data.json';\n\nexport default function dataReducer(state = data, action) {\n\treturn state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers/rootReducer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}